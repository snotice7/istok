<?xml version="1.0"?>
<xgridfit xmlns="http://xgridfit.sourceforge.net/Xgridfit2">
 <glyph ps-name="Z" init-graphics="yes">
  
  <!--
      Copyright (C) 2008, 2009, 2010  Andrey V. Panov
      
      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      (at your option) any later version.
      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      
      You should have received a copy of the GNU General Public License
      along with this program.  If not, see "http://www.gnu.org/licenses/".
      
      -->
  
  <param name="baseline" value="cap-x-baseline"/>
  <param name="height" value="cap-x-height"/>
  <param name="thick-diag" value="cap-diag"/>
  <param name="horiz-stem" value="cap-horiz-stem"/>
  <param name="vert-stem" value="cap-vert-stem"/>
  
  <constant name="lower-hstem-left-bottom" value="first-point"/>
  <constant name="diag-left-side-bottom" value="lower-hstem-left-bottom + hstem-vcount"/>
  <constant name="diag-left-side-top" value="diag-left-side-bottom + smooth-count"/>
  <constant name="upper-hstem-left-bottom" value="diag-left-side-top + smooth-count + notch-count"/>
  <constant name="upper-hstem-left-top" value="upper-hstem-left-bottom + hstem-vcount"/>
  <constant name="upper-hstem-right-top" value="upper-hstem-left-top + hstem-hcount"/>
  <constant name="diag-right-side-top" value="upper-hstem-right-top + hstem-vcount"/>
  <constant name="diag-right-side-bottom" value="diag-right-side-top + smooth-count"/>
  <constant name="lower-hstem-right-top" value="diag-right-side-bottom + smooth-count + notch-count"/>
  <constant name="lower-hstem-right-bottom" value="lower-hstem-right-top + hstem-vcount"/>
  <constant name="last" value="lower-hstem-right-bottom + last-count"/>
  <line name="diag-left-side">
   <point num="diag-left-side-bottom"/>
   <point num="diag-left-side-top"/>
  </line>
  <line name="diag-right-side">
   <point num="diag-right-side-bottom"/>
   <point num="diag-right-side-top"/>
  </line>
  
  <compile-if test="slanted">
   <set-freedom-vector x-component="x-skew2" y-component="y-skew2"/>
   <set-projection-vector axis="y"/>
   <!--    <set-round-state round="to-grid"/> -->
   <else>
    <set-vectors axis="y"/>
   </else>
  </compile-if>
  
  <move distance="baseline">
   <point num="lower-hstem-left-bottom"/>
   <align>
    <point num="lower-hstem-right-bottom"/>
   </align>
   <move distance="horiz-stem" color="black">
    <point num="lower-hstem-right-top"/>
    <interpolate>
     <!--round="yes"-->
     <point num="diag-left-side-bottom"/>
    </interpolate>
   </move>
  </move>
  <move distance="height">
   <point num="upper-hstem-left-top"/>
   <align>
    <point num="upper-hstem-right-top"/>
   </align>
   <move distance="horiz-stem" color="black">
    <point num="upper-hstem-left-bottom"/>
    <align>
     <point num="diag-left-side-top"/>
    </align>
   </move>
  </move>
  <compile-if test="smooth">
   <if test="vertical-smoothing">
    <call-macro name="double-shift-edge">
     <with-param name="shift" value="temp"/>
     <with-param name="cv" value="index(horiz-stem)"/>
    </call-macro>
    <shift-absolute pixel-distance="negative(temp)">
     <point num="upper-hstem-left-bottom"/>
     <point num="diag-left-side-top"/>
    </shift-absolute>
    <shift-absolute pixel-distance="temp">
     <point num="lower-hstem-right-top"/>
    </shift-absolute>
    <!--<shift-absolute pixel-distance="vgrayshift-">
     <point num="lower-hstem-left-bottom"/>
     <point num="lower-hstem-right-bottom"/>
    </shift-absolute>
    <shift-absolute pixel-distance="vgrayshift">
     <point num="upper-hstem-left-top"/>
     <point num="upper-hstem-right-top"/>
    </shift-absolute>
    <shift-absolute pixel-distance="half-vgrayshift-">
     <point num="upper-hstem-left-bottom"/>
     <point num="diag-left-side-top"/>
    </shift-absolute>
    <shift-absolute pixel-distance="half-vgrayshift">
     <point num="lower-hstem-right-top"/>
    </shift-absolute>-->
   </if>
  </compile-if>
  
  <!--  <compile-if test="slanted">
   <set-projection-vector x-component="x-skew1" y-component="y-skew1"/>
   <set-freedom-vector axis="x"/>
   <set-round-state round="no"/>
   <else>-->
    <set-vectors axis="x"/>
    <!--   </else>
  </compile-if>-->
  <move color="white">
   <reference>
    <point num="left-bearing"/>
   </reference>
   <point num="lower-hstem-left-bottom"/>
   <align compile-if="slanted = 0">
    <point num="diag-left-side-bottom"/>
   </align>
   <!--   <move color="black">
    <point num="lower-hstem-right-bottom"/>
    <align compile-if="slanted = 0">
     <point num="lower-hstem-right-top"/>
    </align>
   </move>-->
  </move>
  <!--   Alternative approach -->
  <move min-distance="no" color="white">
   <reference>
    <point num="right-bearing"/>
   </reference>
   <point num="lower-hstem-right-bottom"/>
   <align compile-if="slanted = 0">
    <point num="lower-hstem-right-top"/>
   </align>
  </move>
  <!-- - rbearing-->
  <!--  <set-equal target="width" source="(lower-hstem-right-bottom - - right-bearing)"/>
  <if test="width &lt; 0.0p">
   <shift-absolute pixel-distance="width">
    <point num="lower-hstem-right-bottom"/>
    <point num="lower-hstem-right-top"/>
   </shift-absolute>
  </if>
  <move min-distance="no" color="white">
   <reference>
    <point num="lower-hstem-right-bottom"/>
   </reference>
   <point num="right-bearing"/>
  </move>-->
  <compile-if test="slanted">
   <set-projection-vector x-component="x-skew1" y-component="y-skew1"/>
   <set-round-state round="no"/>
   <align>
    <reference>
     <point num="lower-hstem-left-bottom"/>
    </reference>
    <point num="diag-left-side-bottom"/>
   </align>
   <align>
    <reference>
     <point num="lower-hstem-right-bottom"/>
    </reference>
    <point num="lower-hstem-right-top"/>
   </align>
  </compile-if>
  <interpolate round="yes">
   <reference>
    <point num="lower-hstem-left-bottom"/>
    <point num="lower-hstem-right-bottom"/>
   </reference>
   <point num="upper-hstem-left-top"/>
   <point num="upper-hstem-right-top"/>
  </interpolate>
  <!--  <compile-if test="smooth">
   <if test="horizontal-smoothing">
    <shift-absolute pixel-distance="hgrayshift-">
     <point num="lower-hstem-left-bottom"/>
     <point num="diag-left-side-bottom"/>
     <point num="upper-hstem-left-top"/>
    </shift-absolute>
    <shift-absolute pixel-distance="hgrayshift">
     <point num="lower-hstem-right-bottom"/>
     <point num="lower-hstem-right-top"/>
     <point num="upper-hstem-right-top"/>
    </shift-absolute>
   </if>
  </compile-if>-->
  <align>
   <reference>
    <point num="upper-hstem-left-top"/>
   </reference>
   <point num="upper-hstem-left-bottom"/>
  </align>
  <interpolate>   <!-- round="up-to-grid" -->
   <reference>
    <point num="upper-hstem-left-top"/>
    <point num="upper-hstem-right-top"/>
   </reference>
   <point num="diag-left-side-top"/>
  </interpolate>
  <if test="(diag-left-side-top -- upper-hstem-right-top) &gt; control-value(index(vert-stem))">
   <mdap round="up-to-grid">
    <point num="diag-left-side-top"/>
   </mdap>
   <else>
    <mdap round="yes">
     <point num="diag-left-side-top"/>
    </mdap>
   </else>
  </if>
  <with-projection-vector to-line="orthogonal">
   <line ref="diag-left-side"/>
   <move distance="thick-diag" round="no" cut-in="no" min-distance="diag-min-thick" color="black">
    <reference>
     <point num="diag-left-side-bottom"/>
    </reference>
    <point num="diag-right-side-bottom"/>
   </move>
  </with-projection-vector>
  <with-projection-vector axis="y">
   <with-freedom-vector to-line="parallel">
    <line ref="diag-left-side"/>
    <align>
     <reference>
      <point num="lower-hstem-right-top"/>
     </reference>
     <point num="diag-right-side-bottom"/>
    </align>
   </with-freedom-vector>
  </with-projection-vector>
  <mdap round="yes">
   <point num="diag-right-side-bottom"/>
  </mdap>
  <with-vectors to-line="orthogonal">
   <line ref="diag-left-side"/>
   <align>
    <reference>
     <point num="diag-right-side-bottom"/>
    </reference>
    <point num="diag-right-side-top"/>
   </align>
  </with-vectors>
  <!--   <with-projection-vector axis="x"> -->
   <with-freedom-vector to-line="parallel">
    <line ref="diag-right-side"/>
    <align>
     <reference>
      <point num="upper-hstem-right-top"/>
     </reference>
     <point num="diag-right-side-top"/>
    </align>
   </with-freedom-vector>
   <!--   </with-projection-vector> -->
  <with-projection-vector axis="y">
   <if test="coord(upper-hstem-right-top) &lt; coord(diag-right-side-top)">
    <move-point-to-intersection>
     <point num="diag-right-side-top"/>
     <line>
      <point num="upper-hstem-left-top"/>
      <point num="upper-hstem-right-top"/>
     </line>
     <line ref="diag-right-side"/>
    </move-point-to-intersection>
   </if>
  </with-projection-vector>
  <!--   <set-vectors axis="x"/> -->
  <!--  <shift-absolute pixel-distance="-0.05p">
   <point num="diag-right-side-bottom"/>
  </shift-absolute>
  <shift-absolute pixel-distance="0.05p">
   <point num="diag-left-side-top"/>
  </shift-absolute>-->
  <interpolate-untouched-points/>
 </glyph>
 
 <glyph ps-name="z" init-graphics="yes">
  <call-glyph ps-name="Z">
   <with-param name="baseline" value="small-x-baseline"/>
   <with-param name="height" value="small-x-height"/>
   <with-param name="thick-diag" value="small-diag"/>
   <with-param name="horiz-stem" value="small-horiz-stem"/>
   <with-param name="vert-stem" value="small-vert-stem"/>
  </call-glyph>
 </glyph>
</xgridfit>
