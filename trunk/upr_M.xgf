<?xml version="1.0"?>
<xgridfit xmlns="http://xgridfit.sourceforge.net/Xgridfit2">
 <!--M, Cyr M-->
 <glyph ps-name="M" init-graphics="yes">
  
  <!--
      
      Copyright (C) 2007, 2008, 2009, 2010 Andrey V. Panov
      
      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      (at your option) any later version.
      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      
      You should have received a copy of the GNU General Public License
      along with this program.  If not, see "http://www.gnu.org/licenses/".
      
      -->
  
  <param name="baseline" value="cap-x-baseline"/>
  <param name="x-height" value="cap-x-height"/>
  <param name="vert-stem" value="cap-vert-stem"/>
  <param name="thin-diag" value="cap--thindiag"/>
  <param name="thick-diag" value="cap-thindiag"/>
  <param name="lbearing" value="cap-h-lbearing"/>
  
  <constant name="lstem-left-bottom" value="first-point"/>
  <constant name="lstem-left-top" value="lstem-left-bottom + vstem-vcount"/>
  <constant name="ldiag-right-top" value="lstem-left-top + vstem-hcount"/>
  <constant name="diag-intersect" value="ldiag-right-top + diag--halfnotch-count"/>
  <constant name="rdiag-left-top" value="diag-intersect + diag-halfnotch-count"/>
  <constant name="rstem-right-top" value="rdiag-left-top + vstem-hcount"/>
  <constant name="rstem-right-bottom" value="rstem-right-top + vstem-vcount"/>
  <constant name="rstem-left-bottom" value="rstem-right-bottom + vstem-hcount"/>
  <constant name="rstem-left-top" value="rstem-left-bottom + notch-count"/>
  <constant name="rdiag-right-top" value="rstem-left-bottom + smooth-count + notch-count"/>
  <constant name="rdiag-right-bottom" value="rdiag-right-top + smooth-count"/>
  <constant name="ldiag-left-bottom" value="rdiag-right-bottom + vstem-hcount"/>
  <constant name="ldiag-left-top" value="ldiag-left-bottom + smooth-count"/>
  <constant name="lstem-right-top" value="ldiag-left-top + notch-count"/>
  <constant name="lstem-right-bottom" value="ldiag-left-top + smooth-count + notch-count"/>
  <constant name="last" value="lstem-right-bottom + last-count"/>
  <line name="ldiag-left">
   <point num="ldiag-left-top"/>
   <point num="ldiag-left-bottom"/>
  </line>
  <line name="ldiag-right">
   <point num="ldiag-right-top"/>
   <point num="diag-intersect"/>
  </line>
  <line name="rdiag-left">
   <point num="diag-intersect + 1"/>
   <point num="rdiag-left-top"/>
  </line>
  <line name="rdiag-right">
   <point num="rdiag-right-bottom"/>
   <point num="rdiag-right-top"/>
  </line>
  
  <compile-if test="slanted">
   <set-projection-vector x-component="x-skew1" y-component="y-skew1"/>
   <set-freedom-vector axis="x"/>
   <set-round-state round="no"/>
   <else>
    <set-vectors axis="x"/>
    <compile-if test="smooth">
     <if test="horizontal-smoothing">
      <set-round-state round="no"/>
     </if>
    </compile-if>
   </else>
  </compile-if>
  
  <move distance="lbearing" color="white">
   <reference>
    <point num="left-bearing"/>
   </reference>
   <point num="lstem-left-bottom"/>
   <align>
    <point num="lstem-left-top"/>
   </align>
   <move distance="vert-stem" color="black">
    <point num="lstem-right-bottom"/>
    <align>
     <point num="lstem-right-top"/>
    </align>
   </move>
   <move color="black" compile-if="(smooth = 0) and (slanted = 0)">
    <point num="rstem-right-bottom"/>
    <align>
     <point num="rstem-right-top"/>
    </align>
    <move distance="vert-stem" color="black">
     <point num="rstem-left-bottom"/>
     <align>
      <point num="rstem-left-top"/>
     </align>
    </move>
    <move min-distance="no">
     <point num="right-bearing"/>
    </move>
   </move>
   <move color="black" compile-if="smooth or slanted">
    <point num="rstem-right-bottom"/>
    <move color="white" min-distance="no">
     <point num="right-bearing"/>
    </move>
   </move>
  </move>
  <compile-if test="smooth or slanted">
   <compile-if test="slanted">
    <set-projection-vector axis="x"/>
   </compile-if>
   <set-round-state round="to-grid"/>
   <move>
    <point num="rstem-right-bottom"/>
   </move>
   <compile-if test="smooth">
    <if test="horizontal-smoothing">
     <call-macro name="shift-edge-slanted">
      <with-param name="shift" value="temp"/>
      <with-param name="cv" value="index(vert-stem)"/>
     </call-macro>
     <shift-absolute pixel-distance="temp">
      <point num="rstem-right-bottom"/>
     </shift-absolute>
    </if>
   </compile-if>
   <compile-if test="slanted">
    <set-projection-vector x-component="x-skew1" y-component="y-skew1"/>
   </compile-if>
   <set-round-state round="no"/>
   <align>
    <reference>
     <point num="rstem-right-bottom"/>
    </reference>
    <point num="rstem-right-top"/>
   </align>
   <move distance="vert-stem" color="black">
    <reference>
     <point num="rstem-right-bottom"/>
    </reference>
    <point num="rstem-left-bottom"/>
    <align>
     <point num="rstem-left-top"/>
    </align>
   </move>
  </compile-if>
  <!-- <compile-if test="smooth">
   <if test="horizontal-smoothing">
    <set-round-state round="to-grid"/>
   </if>
  </compile-if>-->
  <interpolate>
   <!--round="yes"-->
   <reference>
    <point num="lstem-right-bottom"/>
    <point num="rstem-left-bottom"/>
   </reference>
   <point num="diag-intersect"/>
   <point num="diag-intersect + 1"/>
   <!--for two points at diagonal intersction-->
   <point num="ldiag-right-top"/>
   <point num="rdiag-left-top"/>
  </interpolate>
  <compile-if test="slanted = 0">
   <if test="pixels-per-em &lt; 21">
    <shift-absolute pixel-distance="-0.1p">
     <point num="diag-intersect"/>
    </shift-absolute>
    <shift-absolute pixel-distance="0.1p">
     <point num="diag-intersect + 1"/>
    </shift-absolute>
   </if>
   <else>
    <set-projection-vector axis="x"/>
    <mdap round="to-grid">
     <point num="right-bearing"/>
    </mdap>
   </else>
  </compile-if>
  <!-- <compile-if test="slanted = 0">
   <mdap round="to-double-grid">
    <point num="diag-intersect"/>
   </mdap>
  </compile-if>-->
  <!-- <if test="pixels-per-em &lt; cap-thick-eq-thin">
   <align>
    <reference>
     <point num="lstem-right-bottom"/>
    </reference>
    <point num="ldiag-right-top"/>
   </align>
   <align>
    <reference>
     <point num="rstem-left-bottom"/>
    </reference>
    <point num="rstem-left-top"/>
   </align>
   <call-function name="center-point-with-two-reper-points">
    <with-param name="point-left" value=""lstem-right-bottom/>
    <with-param name="point-center" value="diag-intersect"/>
    <with-param name="point-right" value="rstem-left-bottom"/>
   </call-function>
   <else>
    <interpolate round="yes">
     <reference>
      <point num="lstem-right-bottom"/>
      <point num="rstem-left-bottom"/>
     </reference>
     <point num="ldiag-right-top"/>
     <point num="rstem-left-top"/>
    </interpolate>
    <compile-if test="regular = 0 or slanted = 0">
     <if test="(ldiag-right-top - - diag-intersect) - (diag-intersect - - rstem-left-bottom) &lt; 0.0p">
      <shift-absolute pixel-distance="1.0p">
       <point num="diag-intersect"/>
      </shift-absolute>
     </if>
    </compile-if>
   </else>
  </if>-->
  
  <compile-if test="slanted">
   <set-freedom-vector x-component="x-skew2" y-component="y-skew2"/>
   <set-projection-vector axis="y"/>
   <set-round-state round="to-grid"/>
   <else>
    <set-vectors axis="y"/>
   </else>
  </compile-if>
  <compile-if test="smooth">
   <if test="vertical-smoothing">
    <set-round-state round="no"/>
   </if>
  </compile-if>
  
  <move distance="baseline">
   <point num="lstem-left-bottom"/>
   <align>
    <point num="lstem-right-bottom"/>
    <point num="rstem-left-bottom"/>
    <point num="rstem-right-bottom"/>
    <point num="ldiag-left-bottom"/>
    <point num="rdiag-right-bottom"/>
   </align>
  </move>
  <move distance="x-height">
   <point num="lstem-left-top"/>
   <align>
    <point num="ldiag-right-top"/>
    <point num="rdiag-left-top"/>
    <point num="rstem-right-top"/>
   </align>
  </move>
  <interpolate round="yes">
   <reference>
    <point num="lstem-left-bottom"/>
    <point num="lstem-left-top"/>
   </reference>
   <point num="diag-intersect"/>
   <point num="diag-intersect + 1"/>
  </interpolate>
  <with-round-state round="no">
   <with-minimum-distance value="diag-min-thick">
    <diagonal-stem distance="thin-diag" save-vectors="yes" color="black">
     <line ref="ldiag-right"/>
     <line ref="ldiag-left"/>
    </diagonal-stem>
    <diagonal-stem distance="thick-diag" save-vectors="yes" color="black">
     <line ref="rdiag-left"/>
     <line ref="rdiag-right"/>
    </diagonal-stem>
   </with-minimum-distance>
  </with-round-state>
  <with-projection-vector axis="y">
   <with-freedom-vector to-line="parallel">
    <line ref="ldiag-left"/>
    <align>
     <reference>
      <point num="lstem-left-bottom"/>
     </reference>
     <point num="ldiag-left-bottom"/>
    </align>
    <interpolate>
     <reference>
      <point num="lstem-left-bottom"/>
      <point num="lstem-left-top"/>
     </reference>
     <point num="ldiag-left-top"/>
    </interpolate>
   </with-freedom-vector>
   <with-freedom-vector to-line="parallel">
    <line ref="rdiag-right"/>
    <align>
     <reference>
      <point num="lstem-left-bottom"/>
     </reference>
     <point num="rdiag-right-bottom"/>
    </align>
    <interpolate>
     <reference>
      <point num="lstem-left-bottom"/>
      <point num="lstem-left-top"/>
     </reference>
     <point num="rdiag-right-top"/>
    </interpolate>
   </with-freedom-vector>
  </with-projection-vector>
  <set-projection-vector axis="x"/>
  <if test="coord(ldiag-left-bottom) &gt; coord(rdiag-right-bottom)">
   <move-point-to-intersection>
    <point num="ldiag-left-bottom"/>
    <line ref="ldiag-left"/>
    <line ref="rdiag-right"/>
   </move-point-to-intersection>
   <move-point-to-intersection>
    <point num="rdiag-right-bottom"/>
    <line ref="ldiag-left"/>
    <line ref="rdiag-right"/>
   </move-point-to-intersection>
  </if>
  <!--for two points at diagonal intersction-->
  <!-- <set-freedom-vector axis="x"/>
  <compile-if test="slanted = 0">
   <shift-absolute pixel-distance="((diag-intersect + 1) - - - diag-intersect) * 0.5p">
    <point num="diag-intersect"/>
   </shift-absolute>
  </compile-if>-->
  
  <interpolate-untouched-points/>
 </glyph> <!--Cyr M-->
 
 <!--Cyr m-->
 <glyph ps-name="afii10078" init-graphics="yes">
  <call-glyph ps-name="M">
   <with-param name="baseline" value="small-x-baseline"/>
   <with-param name="x-height" value="small-x-height"/>
   <with-param name="vert-stem" value="small-vert-stem"/>
   <with-param name="thin-diag" value="small-thindiag"/>
   <with-param name="thick-diag" value="small--thindiag"/>
   <with-param name="lbearing" value="small-cyrn-lbearing"/>
  </call-glyph>
 </glyph>
</xgridfit>
