<?xml version="1.0"?>
<xgridfit xmlns="http://xgridfit.sourceforge.net/Xgridfit2">
 <glyph ps-name="Q" init-graphics="yes">
  
  <!--
      
      Copyright (C) 2008, 2010  Andrey V. Panov
      
      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      (at your option) any later version.
      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      
      You should have received a copy of the GNU General Public License
      along with this program.  If not, see "http://www.gnu.org/licenses/".
      
      -->
  
  <param name="baseline" value="cap-o-baseline"/>
  <param name="height" value="cap-o-height"/>
  <param name="horiz-stem" value="cap-curve-hstem"/>
  <param name="vert-stem" value="cap-o-curve-stem"/>
  <param name="space" value="cap-o-space"/>
  <param name="lbearing" value="cap-o-lbearing"/>
  
  <constant name="outer-left" value="0"/>
  <constant name="outer-top" value="outer-left + 3"/>
  <constant name="outer-right" value="outer-top + 3"/>
  <constant name="outer-bottom-right" value="outer-right + 4"/>
  <constant name="curl-end-top" value="15"/>
  <constant name="curl-end-bottom" value="curl-end-top + open-end-count"/>
  <constant name="outer-bottom-left" value="curl-end-bottom + 5"/>
  <constant name="inner-left" value="outer-bottom-left + 4"/>
  <constant name="inner-bottom" value="inner-left + 3"/>
  <constant name="inner-right" value="inner-bottom + 3"/>
  <constant name="inner-top" value="inner-right + 3"/>
  <constant name="last" value="inner-top + 2"/>
  
  <set-vectors axis="x"/>
  
  <compile-if test="smooth">
   <if test="horizontal-smoothing">
    <set-round-state round="no"/>
   </if>
  </compile-if>
  
  <move distance="lbearing" color="white">
   <reference>
    <point num="left-bearing"/>
   </reference>
   <point num="outer-left"/>
   <move distance="vert-stem" color="black">
    <point num="inner-left"/>
   </move>
   <move distance="space" color="black">
    <point num="outer-right"/>
    <interpolate>
     <point num="outer-top"/>
     <point num="outer-bottom-left"/>
     <point num="outer-bottom-right"/>
     <point num="inner-bottom"/>
     <point num="inner-top"/>
    </interpolate>
    <move distance="vert-stem" color="black">
     <point num="inner-right"/>
     <interpolate>
      <point num="curl-end-top"/>
      <point num="curl-end-bottom"/>
     </interpolate>
    </move>
    <move min-distance="no" color="white">
     <point num="right-bearing"/>
    </move>
   </move>
  </move>
  
  <compile-if test="smooth">
   <if test="horizontal-smoothing">
    <mdap round="to-grid">
     <point num="right-bearing"/>
    </mdap>
   </if>
  </compile-if>
  
  <set-vectors axis="y"/>
  <compile-if test="smooth">
   <if test="only-horizontal-smoothing">
    <set-round-state round="to-grid"/>
   </if>
  </compile-if>
  
  <move distance="baseline">
   <point num="outer-bottom-left"/>
   <align>
    <point num="outer-bottom-right"/>
   </align>
   <move distance="horiz-stem" color="black">
    <point num="inner-bottom"/>
   </move>
  </move>
  <move distance="height">
   <point num="outer-top"/>
   <move distance="horiz-stem" color="black">
    <point num="inner-top"/>
   </move>
  </move>
  <compile-if test="smooth">
   <if test="vertical-smoothing">
    <set-round-state round="to-grid"/>
   </if>
  </compile-if>
  <move>
   <point num="curl-end-top"/>
   <move distance="horiz-stem" color="black">
    <point num="curl-end-bottom"/>
   </move>
  </move>
  <compile-if test="smooth">
   <if test="vertical-smoothing">
    <call-macro name="shift-edge-points">
     <with-param name="shift" value="temp"/>
     <with-param name="point-first" value="curl-end-bottom"/>
     <with-param name="point-second" value="curl-end-top"/>
    </call-macro>
    <shift-absolute pixel-distance="negative(temp)">
     <point num="curl-end-bottom"/>
    </shift-absolute>
    <shift-absolute pixel-distance="temp">
     <point num="curl-end-top"/>
    </shift-absolute>
   </if>
  </compile-if>
  
  <interpolate-untouched-points/>
 </glyph>
 
</xgridfit>
