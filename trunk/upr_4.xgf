<?xml version="1.0"?>
<xgridfit xmlns="http://xgridfit.sourceforge.net/Xgridfit2">
 <glyph ps-name="four" init-graphics="yes">
  
  <!--
      
      Copyright (C) 2008, 2009, 2010, 2012  Andrey V. Panov
      
      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      (at your option) any later version.
      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      
      You should have received a copy of the GNU General Public License
      along with this program.  If not, see "http://www.gnu.org/licenses/".
      
      -->
  
  <param name="baseline" value="cap-x-baseline"/>
  <param name="height" value="digit-over-height"/>
  <param name="vert-stem" value="digit-vert-stem"/>
  <param name="horiz-stem" value="digit-mid-horiz-stem"/>
  <param name="diag" value="cap-thindiag"/>
  
  <constant name="hstem-left-bottom" value="first-point"/>
  <constant name="hstem-left-top" value="hstem-left-bottom + hstem-vcount"/>
  <constant name="vstem-left-top" value="hstem-left-top + vstem-vcount"/>
  <constant name="vstem-right-top" value="vstem-left-top + vstem-hcount"/>
  <constant name="hstem-intersect-right-top" value="vstem-right-top + smooth-count"/>
  <constant name="hstem-right-top" value="hstem-intersect-right-top + smooth-count"/>
  <constant name="hstem-right-bottom" value="hstem-right-top + hstem-vcount"/>
  <constant name="hstem-intersect-right-bottom" value="hstem-right-bottom + smooth-count"/>
  <constant name="vstem-right-bottom" value="hstem-intersect-right-bottom + smooth-count"/>
  <constant name="vstem-left-bottom" value="vstem-right-bottom + vstem-hcount"/>
  <constant name="hstem-intersect-left-bottom" value="vstem-left-bottom + smooth-count"/>
  <constant name="inner-left-bottom" value="27"/>
  <constant name="inner-right-bottom" value="inner-left-bottom + 1"/>
  <constant name="inner-right-top" value="inner-right-bottom + notch-count + 1"/>
  <constant name="inner-left-top" value="inner-right-top"/>
  <constant name="last" value="inner-left-top"/>
  <line name="left-side">
   <point num="hstem-left-top"/>
   <point num="vstem-left-top"/>
  </line>
  <line name="right-side">
   <point num="inner-left-bottom"/>
   <point num="inner-left-top"/>
  </line>
  
  <compile-if test="slanted">
   <set-freedom-vector x-component="x-skew2" y-component="y-skew2"/>
   <set-projection-vector axis="y"/>
   <!--   <set-round-state round="to-grid"/> -->
   <else>
    <set-vectors axis="y"/>
   </else>
  </compile-if>
  <compile-if test="smooth">
   <if test="any-smoothing">
    <set-minimum-distance value="1.0p"/>
   </if>
  </compile-if>
  
  <move distance="baseline">
   <point num="vstem-left-bottom"/>
   <align>
    <point num="vstem-right-bottom"/>
   </align>
   <move color="black">
    <point num="hstem-left-bottom"/>
    <align>
     <point num="hstem-intersect-right-bottom"/>
     <point num="hstem-intersect-left-bottom"/>
     <point num="hstem-right-bottom"/>
    </align>
    <move distance="horiz-stem" color="black">
     <point num="hstem-right-top"/>
     <align>
      <!--       <point num="hstem-left-top"/> -->
      <point num="hstem-intersect-right-top"/>
      <point num="inner-right-bottom"/>
      <point num="inner-left-bottom"/>
     </align>
     <interpolate>
      <point num="hstem-left-top"/>
     </interpolate>
    </move>
   </move>
  </move>
  <move distance="height">
   <point num="vstem-right-top"/>
   <align>
    <point num="vstem-left-top"/>
   </align>
  </move>
  <compile-if test="smooth">
   <if test="vertical-smoothing">
    <call-macro name="shift-edge">
     <with-param name="shift" value="temp"/>
     <with-param name="cv" value="horiz-stem"/>
    </call-macro>
    <shift-absolute pixel-distance="negative(temp)">
     <!--     <point num="vstem-left-bottom"/>
     <point num="vstem-right-bottom"/>-->
     <point num="hstem-left-bottom"/>
     <point num="hstem-intersect-right-bottom"/>
     <point num="hstem-intersect-left-bottom"/>
     <point num="hstem-right-bottom"/>
    </shift-absolute>
    <shift-absolute pixel-distance="temp">
     <point num="hstem-right-top"/>
     <point num="hstem-left-top"/>
     <point num="hstem-intersect-right-top"/>
     <point num="inner-right-bottom"/>
     <point num="inner-left-bottom"/>
     <!--     <point num="vstem-right-top"/>
     <point num="vstem-left-top"/>-->
    </shift-absolute>
   </if>
  </compile-if>
  
  <set-vectors axis="x"/>
  
  <move color="white" compile-if="slanted = 0">
   <reference>
    <point num="left-bearing"/>
   </reference>
   <point num="hstem-left-bottom"/>
   <align>
    <point num="hstem-left-top"/>
   </align>
   <move>
    <point num="vstem-left-bottom"/>
    <align>
     <point num="hstem-intersect-left-bottom"/>
     <point num="inner-right-bottom"/>
     <point num="inner-right-top"/>
    </align>
    <move distance="vert-stem" color="black">
     <point num="vstem-right-top"/>
     <align>
      <point num="vstem-right-bottom"/>
      <point num="hstem-intersect-right-bottom"/>
      <point num="hstem-intersect-right-top"/>
     </align>
     <move>
      <point num="hstem-right-top"/>
      <align>
       <point num="hstem-right-bottom"/>
      </align>
     </move>
    </move>
   </move>
  </move>
  <compile-if test="slanted">
   <move min-distance="no" color="white">
    <reference>
     <point num="left-bearing"/>
    </reference>
    <point num="hstem-left-bottom"/>
   </move>
   <move color="white">
    <reference>
     <point num="right-bearing"/>
    </reference>
    <point num="vstem-right-bottom"/>
   </move>
   <set-projection-vector x-component="x-skew1" y-component="y-skew1"/>
   <set-freedom-vector axis="x"/>
   <set-round-state round="no"/>
   <align>
    <reference>
     <point num="hstem-left-bottom"/>
    </reference>
    <point num="hstem-left-top"/>
   </align>
   <align>
    <reference>
     <point num="vstem-right-bottom"/>
    </reference>
    <point num="vstem-right-top"/>
    <point num="hstem-intersect-right-bottom"/>
    <point num="hstem-intersect-right-top"/>
   </align>
   <move distance="vert-stem" color="black">
    <reference>
     <point num="vstem-right-bottom"/>
    </reference>
    <point num="vstem-left-bottom"/>
    <align>
     <point num="hstem-intersect-left-bottom"/>
     <point num="inner-right-bottom"/>
     <point num="inner-right-top"/>
    </align>
   </move>
   <move min-distance="no">
    <reference>
     <point num="right-bearing"/>
    </reference>
    <point num="hstem-right-top"/>
    <align>
     <point num="hstem-right-bottom"/>
    </align>
   </move>
   <else>
    <set-equal target="width" source="(hstem-right-bottom -- right-bearing)"/> <!-- - rbearing-->
    <if test="width &lt; 0.0p">
     <shift-absolute pixel-distance="width">
      <point num="hstem-right-bottom"/>
      <point num="hstem-right-top"/>
     </shift-absolute>
     <if test="hstem-intersect-right-bottom -- hstem-right-bottom &lt; 0.5p">
      <shift-absolute pixel-distance="-1.0p">
       <point num="vstem-left-bottom"/>
       <point num="hstem-intersect-left-bottom"/>
       <point num="inner-right-bottom"/>
       <point num="inner-right-top"/>
       <point num="vstem-right-top"/>
       <point num="vstem-right-bottom"/>
       <point num="hstem-intersect-right-bottom"/>
       <point num="hstem-intersect-right-top"/>
      </shift-absolute>
     </if>
    </if>
   </else>
  </compile-if>
  <!--  <compile-if test="slanted">
   <set-vectors axis="x"/>
   <set-equal target="temp" source="coord(vstem-left-bottom)"/>
   <mdap round="to-grid">
    <point num="vstem-left-bottom"/>
   </mdap>
   <shift-absolute pixel-distance="coord(vstem-left-bottom) - temp">
    <point num="hstem-intersect-left-bottom"/>
    <point num="inner-right-bottom"/>
    <point num="inner-right-top"/>
    <point num="vstem-right-top"/>
    <point num="vstem-right-bottom"/>
    <point num="hstem-intersect-right-bottom"/>
    <point num="hstem-intersect-right-top"/>
   </shift-absolute>
  </compile-if>-->
  <compile-if test="smooth and (slanted = 0)">
   <if test="horizontal-smoothing">
    <call-macro name="shift-edge">
     <with-param name="shift" value="temp"/>
     <with-param name="cv" value="vert-stem"/>
    </call-macro>
    <shift-absolute pixel-distance="negative(temp)">
     <point num="hstem-left-bottom"/>
     <point num="hstem-left-top"/>
     <point num="vstem-left-bottom"/>
     <point num="hstem-intersect-left-bottom"/>
    </shift-absolute>
    <shift-absolute pixel-distance="temp">
     <point num="vstem-right-top"/>
     <point num="vstem-right-bottom"/>
     <point num="hstem-intersect-right-bottom"/>
     <point num="hstem-intersect-right-top"/>
     <!--     <point num="hstem-right-top"/>
     <point num="hstem-right-bottom"/>-->
    </shift-absolute>
   </if>
  </compile-if>
  <interpolate>
   <reference>
    <point num="vstem-left-bottom"/>
    <point num="vstem-right-bottom"/>
   </reference>
   <point num="vstem-left-top"/>
  </interpolate>
  <with-round-state round="no">
   <diagonal-stem distance="diag" save-vectors="yes" min-distance="diag-min-thick">
    <line ref="left-side"/>
    <line ref="right-side"/>
   </diagonal-stem>
  </with-round-state>
  <with-freedom-vector to-line="parallel">
   <line ref="right-side"/>
   <with-projection-vector axis="y">
    <align>
     <reference>
      <point num="hstem-right-top"/>
     </reference>
     <point num="inner-left-bottom"/>
    </align>
    <!--    <align>
     <reference>
      <point num="inner-right-top"/>
     </reference>
     <point num="inner-left-top"/>
    </align>-->
   </with-projection-vector>
   <with-projection-vector to-line="orthogonal">
    <line>
     <point num="vstem-left-bottom"/>
     <point num="hstem-intersect-left-bottom"/>
    </line>
    <align>
     <reference>
      <point num="inner-right-bottom"/>
     </reference>
     <point num="inner-left-top"/>
    </align>
   </with-projection-vector>
   <!--   <with-projection-vector axis="x"> -->
    <!--<if test="coord(inner-left-top) &gt; coord(inner-right-top)">
     <align>
      <reference>
       <point num="inner-right-top"/>
      </reference>
      <point num="inner-left-top"/>
     </align>
     <move-point-to-intersection>
      <point num="inner-right-top"/>
      <line ref="right-side"/>
      <line>
       <point num="inner-right-top"/>
       <point num="inner-right-bottom"/>
      </line>
     </move-point-to-intersection>-->
     <!--     <shift-absolute pixel-distance="0.2p">
      <point num="inner-left-top"/>
     </shift-absolute>
     <with-vectors axis="y">
      <shift-absolute pixel-distance="-0.2p">
       <point num="inner-right-top"/>
      </shift-absolute>
     </with-vectors>-->
     <!--     </if> -->
    <!--   </with-projection-vector> -->
  </with-freedom-vector>
  <interpolate-untouched-points/>
 </glyph>
</xgridfit>
