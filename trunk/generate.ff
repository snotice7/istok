#!/usr/bin/env fontforge
/* Copyright (C) 2008-2011, 2013 Andrey V. Panov
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

fontname=$1
_kern_subtable = "LGC kerning subtable"
SetPref("InstructDiagonalStems",1)
SetPref("InstructSerifs",0)
SetPref("InstructBallTerminals",0)
SetPref("InterpolateStrongPoints",1)
SetPref("CounterControl",1)
Open(fontname+".sfd")
descr = LoadStringFromFile("README")
if (fontname == "Istok-Italic")
 alt_sub.ff()
endif
cursive = $italicangle != 0
smallcap = fontname == "Istok-Regular"
Reencode("unicode")
serbsubs.ff()
if (cursive)
 h_offset = -240
else
 h_offset = 0
endif
add_ipa.ff(h_offset,cursive)
same_cyrext.ff()
combining.ff()
anchors.ff()
spaces_dashes.ff()
case_sub.ff()
sub_onum.ff()
tab_sub.ff()
#if (fontname != "Istok-Italic")
if (cursive)
 same_kern.ff("globkern","cursive","copyen")
else
 same_kern.ff("globkern","copyen")
endif
make_kern.ff(cursive)
make_kern_latin1.ff()
#endif
if (smallcap)
 combining_sc.ff(30)
 sc_sub.ff()
 anchors_sc.ff()
endif
add_accented.ff()
if (smallcap)
# add_accented_sc.ff()
# same_cyrext_sc.ff()
 same_kern_sc.ff("globkern")
 make_kern_sc.ff()
endif
liga_sub.ff()
add_subfigs.ff(-920)
SetTTFName(0x409,10,descr)
#Generate(fontname+".otf","ttf",0x200A00,-1)
SelectWorthOutputting()
#RemoveOverlap()
RoundToInt()
CorrectDirection()
#CanonicalContours()
#CanonicalStart()
AutoInstr()
Save(fontname+"_.sfd")
Generate(fontname+".gen.ttf","ttf",0xA00,-1)


SetFontOrder(3)
SetPref("InstructSerifs",0)
SetPref("InstructBallTerminals",0)
SetPref("DetectDiagonalStems",1)
SetPref("InterpolateStrongPoints",1)
PrivateGuess("BlueValues")
PrivateGuess("OtherBlues")
PrivateGuess("BlueScale")
PrivateGuess("BlueShift")
Select("tse")
bbox = GlyphInfo("BBox")
pr_string = GetPrivateEntry("OtherBlues")
length = Strlen(pr_string)
if (length > 2)
 pr_string = Strsub(pr_string,1,length-1)
endif
private = StrSplit(pr_string," ")
size_ar = SizeOf(private)
check = 1
i = 0
while (i < size_ar)
 if ( Strtol(private[i]) <= Round(bbox[1]) && Strtol(private[i+1]) >= Round(bbox[1]))
  check = 0
 endif
 i = i+2
endloop
if (check)
 ChangePrivateEntry("OtherBlues","["+pr_string+" "+ToString(Round(bbox[1]))+" "+ToString(Round(bbox[1]))+"]")
endif
SelectWorthOutputting()
RoundToInt()
Simplify()
CanonicalContours()
CanonicalStart()
AutoHint()
PrivateGuess("StdHW")
PrivateGuess("StdVW")
PrivateGuess("StemSnapH")
PrivateGuess("StemSnapV")
Generate(fontname+".pfb","",0x200000)
