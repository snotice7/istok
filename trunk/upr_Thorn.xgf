<?xml version="1.0"?>
<xgridfit xmlns="http://xgridfit.sourceforge.net/Xgridfit2">
 <!--Ãž-->
 <glyph ps-name="Thorn" init-graphics="yes">
  <!--
      
      Copyright (C) 2007, 2008, 2009, 2010, 2011  Andrey V. Panov
      
      This program is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      (at your option) any later version.
      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      
      You should have received a copy of the GNU General Public License
      along with this program.  If not, see "http://www.gnu.org/licenses/".
      
      -->
  
  <param name="baseline" value="cap-x-baseline"/>
  <param name="x-height" value="cap-x-height"/>
  <param name="vert-stem" value="cap-vert-stem"/>
  <param name="curve-vstem" value="cap-p-curve-stem"/>
  <param name="horiz-stem" value="cap-horiz-stem"/>
  <param name="lbearing" value="cap-h-lbearing"/>
  <param name="hcount" value="1"/>
  
  <constant name="lstem-left-bottom" value="first-point"/>
  <constant name="lstem-left-top" value="lstem-left-bottom + vstem-vcount"/>
  <constant name="lstem-right-top" value="lstem-left-top +  vstem-hcount"/>
  <constant name="upper-hstem-left-top" value="lstem-right-top + smooth-count"/>
  <constant name="upper-hstem-right-top" value="upper-hstem-left-top + hcount"/>
  <constant name="up-outer-right" value="upper-hstem-right-top + 3"/>
  <constant name="lower-hstem-right-bottom" value="up-outer-right + 3"/>
  <constant name="lower-hstem-left-bottom" value="lower-hstem-right-bottom + hcount"/>
  <constant name="lstem-right-bottom" value="lower-hstem-left-bottom + smooth-count"/>
  <constant name="up-inner-left-bottom" value="lstem-right-bottom + 2"/>
  <constant name="up-inner-right-bottom" value="up-inner-left-bottom + hcount"/>
  <constant name="up-inner-right" value="up-inner-right-bottom + 3"/>
  <constant name="up-inner-right-top" value="up-inner-right + 3"/>
  <constant name="up-inner-left-top" value="up-inner-right-top + hcount"/>
  <constant name="last" value="up-inner-left-top"/>
  
  <compile-if test="slanted">
   <set-freedom-vector x-component="x-skew2" y-component="y-skew2"/>
   <set-projection-vector axis="y"/>
   <!--   <set-round-state round="to-grid"/> -->
   <else>
    <set-vectors axis="y"/>
   </else>
  </compile-if>
  <compile-if test="smooth">
   <if test="vertical-smoothing">
    <set-round-state round="no"/>
   </if>
  </compile-if>
  
  <move distance="baseline">
   <point num="lstem-left-bottom"/>
   <align>
    <point num="lstem-right-bottom"/>
   </align>
  </move>
  <move distance="x-height">
   <point num="lstem-left-top"/>
   <align>
    <point num="lstem-right-top"/>
   </align>
  </move>
  <compile-if test="smooth">
   <if test="vertical-smoothing">
    <set-round-state round="to-grid"/>
   </if>
  </compile-if>
  <move>
   <reference>
    <point num="lstem-left-bottom"/>
   </reference>
   <point num="lower-hstem-left-bottom"/>
   <align>
    <point num="lower-hstem-right-bottom"/>
   </align>
   <move distance="horiz-stem" color="black">
    <point num="up-inner-left-bottom"/>
    <align>
     <point num="up-inner-right-bottom"/>
    </align>
   </move>
  </move>
  <move>
   <reference>
    <point num="lstem-left-top"/>
   </reference>
   <point num="upper-hstem-right-top"/>
   <align>
    <point num="upper-hstem-left-top"/>
   </align>
   <move distance="horiz-stem" color="black">
    <point num="up-inner-left-top"/>
    <align>
     <point num="up-inner-right-top"/>
    </align>
   </move>
  </move>
  <compile-if test="smooth">
   <if test="vertical-smoothing">
    <call-macro name="shift-edge">
     <with-param name="shift" value="temp"/>
     <with-param name="cv" value="horiz-stem"/>
    </call-macro>
    <shift-absolute pixel-distance="negative(temp)">
     <point num="lower-hstem-left-bottom"/>
     <point num="lower-hstem-right-bottom"/>
     <point num="up-inner-left-top"/>
     <point num="up-inner-right-top"/>
    </shift-absolute>
    <shift-absolute pixel-distance="temp">
     <point num="upper-hstem-right-top"/>
     <point num="upper-hstem-left-top"/>
     <point num="up-inner-left-bottom"/>
     <point num="up-inner-right-bottom"/>
    </shift-absolute>
   </if>
  </compile-if>
  
  <compile-if test="slanted">
   <set-projection-vector x-component="x-skew1" y-component="y-skew1"/>
   <set-freedom-vector axis="x"/>
   <set-round-state round="no"/>
   <else>
    <set-vectors axis="x"/>
    <compile-if test="smooth">
     <if test="horizontal-smoothing">
      <set-round-state round="no"/>
     </if>
    </compile-if>
   </else>
  </compile-if>
  
  <move distance="lbearing" color="white">
   <reference>
    <point num="left-bearing"/>
   </reference>
   <point num="lstem-left-bottom"/>
   <align>
    <point num="lstem-left-top"/>
   </align>
   <move distance="vert-stem" color="black">
    <point num="up-inner-left-top"/>
    <align>
     <point num="upper-hstem-left-top"/>
     <point num="up-inner-left-bottom"/>
     <point num="lower-hstem-left-bottom"/>
     <point num="lstem-right-bottom"/>
     <point num="lstem-right-top"/>
    </align>
   </move>
  </move>
  <compile-if test="smooth and (slanted = 0)">
   <if test="horizontal-smoothing">
    <set-round-state round="to-grid"/>
   </if>
  </compile-if>
  <compile-if test="slanted">
   <set-projection-vector axis="x"/>
   <set-round-state round="to-grid"/>
  </compile-if>
  <move min-distance="no" color="white">
   <reference>
    <point num="right-bearing"/>
   </reference>
   <point num="up-outer-right"/>
   <move distance="curve-vstem" color="black">
    <point num="up-inner-right"/>
   </move>
  </move>
  <compile-if test="smooth">
   <if test="horizontal-smoothing">
    <call-macro name="shift-edge">
     <with-param name="shift" value="temp"/>
     <with-param name="cv" value="curve-vstem"/>
    </call-macro>
    <shift-absolute pixel-distance="negative(temp)">
     <point num="up-inner-right"/>
    </shift-absolute>
    <shift-absolute pixel-distance="temp">
     <point num="up-outer-right"/>
    </shift-absolute>
   </if>
  </compile-if>
  
  <interpolate-untouched-points/>
 </glyph>
</xgridfit>
